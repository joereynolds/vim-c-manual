*fopen.txt*
*fopen*

7.21.5.3 The fopen function

==============================================================================
Synopsis
1

#include <stdio.h>
FILE *fopen(const char * restrict filename,
const char * restrict mode);

==============================================================================
Description

2

The fopen function opens the file whose name is the string pointed to by filename,
and associates a stream with it.

3

The argument mode points to a string. If the string is one of the following, the file is
open in the indicated mode. Otherwise, the behavior is undefined.271)
r
w
wx
a
rb
wb

open text file for reading
truncate to zero length or create text file for writing
create text file for writing
append; open or create text file for writing at end-of-file
open binary file for reading
truncate to zero length or create binary file for writing

271) If the string begins with one of the above sequences, the implementation might choose to ignore the
remaining characters, or it might use them to select different kinds of a file (some of which might not
conform to the properties in 7.21.2).

ยง7.21.5.3

Library

305

ISO/IEC 9899:201x

wbx
ab
r+
w+
w+x
a+
r+b or rb+
w+b or wb+
w+bx or wb+x
a+b or ab+


N1570

create binary file for writing
append; open or create binary file for writing at end-of-file
open text file for update (reading and writing)
truncate to zero length or create text file for update
create text file for update
append; open or create text file for update, writing at end-of-file
open binary file for update (reading and writing)
truncate to zero length or create binary file for update
create binary file for update
append; open or create binary file for update, writing at end-of-file

4

Opening a file with read mode ('r' as the first character in the mode argument) fails if
the file does not exist or cannot be read.

5

Opening a file with exclusive mode ('x' as the last character in the mode argument)
fails if the file already exists or cannot be created. Otherwise, the file is created with
exclusive (also known as non-shared) access to the extent that the underlying system
supports exclusive access.

6

Opening a file with append mode ('a' as the first character in the mode argument)
causes all subsequent writes to the file to be forced to the then current end-of-file,
regardless of intervening calls to the fseek function. In some implementations, opening
a binary file with append mode ('b' as the second or third character in the above list of
mode argument values) may initially position the file position indicator for the stream
beyond the last data written, because of null character padding.

7

When a file is opened with update mode ('+' as the second or third character in the
above list of mode argument values), both input and output may be performed on the
associated stream. However, output shall not be directly followed by input without an
intervening call to the fflush function or to a file positioning function (fseek,
fsetpos, or rewind), and input shall not be directly followed by output without an
intervening call to a file positioning function, unless the input operation encounters endof-file. Opening (or creating) a text file with update mode may instead open (or create) a
binary stream in some implementations.

8

When opened, a stream is fully buffered if and only if it can be determined not to refer to
an interactive device. The error and end-of-file indicators for the stream are cleared.

==============================================================================
Returns

9

The fopen function returns a pointer to the object controlling the stream. If the open
operation fails, fopen returns a null pointer.
Forward references: file positioning functions (7.21.9).

306

Library

ยง7.21.5.3

N1570





vim:tw=78:ts=8:ft=help:norl: