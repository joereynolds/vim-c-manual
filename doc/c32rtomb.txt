7.28.1.4 The c32rtomb function
Synopsis
1

#include <uchar.h>
size_t c32rtomb(char * restrict s, char32_t c32,
mbstate_t * restrict ps);
Description

2

If s is a null pointer, the c32rtomb function is equivalent to the call
c32rtomb(buf, L'\0', ps)
where buf is an internal buffer.

3

If s is not a null pointer, the c32rtomb function determines the number of bytes needed
to represent the multibyte character that corresponds to the wide character given by c32
(including any shift sequences), and stores the multibyte character representation in the
array whose first element is pointed to by s. At most MB_CUR_MAX bytes are stored. If
c32 is a null wide character, a null byte is stored, preceded by any shift sequence needed
to restore the initial shift state; the resulting state described is the initial conversion state.
Returns

4

The c32rtomb function returns the number of bytes stored in the array object (including
any shift sequences). When c32 is not a valid wide character, an encoding error occurs:
the function stores the value of the macro EILSEQ in errno and returns
(size_t)(-1); the conversion state is unspecified.

325) When n has at least the value of the MB_CUR_MAX macro, this case can only occur if s points at a
sequence of redundant shift sequences (for implementations with state-dependent encodings).

§7.28.1.4

Library

401

ISO/IEC 9899:201x

Committee Draft — April 12, 2011

N1570

7.29 Extended multibyte and wide character utilities <wchar.h>
7.29.1 Introduction
1

The header <wchar.h> defines four macros, and declares four data types, one tag, and
many functions.326)

2

The types declared are wchar_t and size_t (both described in 7.19);
mbstate_t
which is a complete object type other than an array type that can hold the conversion state
information necessary to convert between sequences of multibyte characters and wide
characters;
wint_t
which is an integer type unchanged by default argument promotions that can hold any
value corresponding to members of the extended character set, as well as at least one
value that does not correspond to any member of the extended character set (see WEOF
below);327) and
struct tm
which is declared as an incomplete structure type (the contents are described in 7.27.1).

3

The macros defined are NULL (described in 7.19); WCHAR_MIN and WCHAR_MAX
(described in 7.20.3); and
WEOF
which expands to a constant expression of type wint_t whose value does not
correspond to any member of the extended character set.328) It is accepted (and returned)
by several functions in this subclause to indicate end-of-file, that is, no more input from a
stream. It is also used as a wide character value that does not correspond to any member
of the extended character set.

4

The functions declared are grouped as follows:
— Functions that perform input and output of wide characters, or multibyte characters,
or both;
— Functions that provide wide string numeric conversion;
— Functions that perform general wide string manipulation;

326) See ‘‘future library directions’’ (7.31.16).
327) wchar_t and wint_t can be the same integer type.
328) The value of the macro WEOF may differ from that of EOF and need not be negative.

402

Library

§7.29.1

N1570

Committee Draft — April 12, 2011

ISO/IEC 9899:201x

— Functions for wide string date and time conversion; and
— Functions that provide extended capabilities for conversion between multibyte and
wide character sequences.
5

Arguments to the functions in this subclause may point to arrays containing wchar_t
values that do not correspond to members of the extended character set. Such values
shall be processed according to the specified semantics, except that it is unspecified
whether an encoding error occurs if such a value appears in the format string for a
function in 7.29.2 or 7.29.5 and the specified semantics do not require that value to be
processed by wcrtomb.

6

Unless explicitly stated otherwise, if the execution of a function described in this
subclause causes copying to take place between objects that overlap, the behavior is
undefined.

7.29.2 Formatted wide character input/output functions
1

The formatted wide character input/output functions shall behave as if there is a sequence
point after the actions associated with each specifier.329)

