*tss_set.txt*
*tss_set*
7.26.6.4 The tss_set function
Synopsis
1

#include <threads.h>
int tss_set(tss_t key, void *val);
Description

2

The tss_set function sets the value for the current thread held in the thread-specific
storage identified by key to val.
Returns

3

The tss_set function returns thrd_success on success or thrd_error if the
request could not be honored.
∗

§7.26.6.4

Library

387

ISO/IEC 9899:201x

Committee Draft — April 12, 2011

N1570

7.27 Date and time <time.h>
7.27.1 Components of time
1

The header <time.h> defines two macros, and declares several types and functions for
manipulating time. Many functions deal with a calendar time that represents the current
date (according to the Gregorian calendar) and time. Some functions deal with local
time, which is the calendar time expressed for some specific time zone, and with Daylight
Saving Time, which is a temporary change in the algorithm for determining local time.
The local time zone and Daylight Saving Time are implementation-defined.

2

The macros defined are NULL (described in 7.19);

∗

CLOCKS_PER_SEC
which expands to an expression with type clock_t (described below) that is the
number per second of the value returned by the clock function; and
TIME_UTC
which expands to an integer constant greater than 0 that designates the UTC time
base.316)
3

The types declared are size_t (described in 7.19);
clock_t
and
time_t
which are real types capable of representing times;
struct timespec
which holds an interval specified in seconds and nanoseconds (which may represent a
calendar time based on a particular epoch); and
struct tm
which holds the components of a calendar time, called the broken-down time.

4

The range and precision of times representable in clock_t and time_t are
implementation-defined. The timespec structure shall contain at least the following
members, in any order.317)

316) Implementations may define additional time bases, but are only required to support a real time clock
based on UTC.
317) The tv_sec member is a linear count of seconds and may not have the normal semantics of a
time_t. The semantics of the members and their normal ranges are expressed in the comments.

388

Library

§7.27.1

N1570

Committee Draft — April 12, 2011

ISO/IEC 9899:201x

time_t tv_sec; // whole seconds — ≥ 0
long
tv_nsec; // nanoseconds — [0, 999999999]
The tm structure shall contain at least the following members, in any order. The
semantics of the members and their normal ranges are expressed in the comments.318)
int
int
int
int
int
int
int
int
int

tm_sec;
tm_min;
tm_hour;
tm_mday;
tm_mon;
tm_year;
tm_wday;
tm_yday;
tm_isdst;

//
//
//
//
//
//
//
//
//

seconds after the minute — [0, 60]
minutes after the hour — [0, 59]
hours since midnight — [0, 23]
day of the month — [1, 31]
months since January — [0, 11]
years since 1900
days since Sunday — [0, 6]
days since January 1 — [0, 365]
Daylight Saving Time flag

The value of tm_isdst is positive if Daylight Saving Time is in effect, zero if Daylight
Saving Time is not in effect, and negative if the information is not available.

7.27.2 Time manipulation functions


vim:tw=78:ts=8:ft=help:norl: