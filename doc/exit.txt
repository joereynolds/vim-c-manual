*exit.txt*
*exit*
7.22.4.4 The exit function
Synopsis
1

#include <stdlib.h>
_Noreturn void exit(int status);
Description

2

The exit function causes normal program termination to occur. No functions registered
by the at_quick_exit function are called. If a program calls the exit function
more than once, or calls the quick_exit function in addition to the exit function, the
behavior is undefined.

3

First, all functions registered by the atexit function are called, in the reverse order of
their registration,299) except that a function is called after any previously registered
functions that had already been called at the time it was registered. If, during the call to
any such function, a call to the longjmp function is made that would terminate the call
to the registered function, the behavior is undefined.

298) The at_quick_exit function registrations are distinct from the atexit registrations, so
applications may need to call both registration functions with the same argument.
299) Each function is called as many times as it was registered, and in the correct order with respect to
other registered functions.

§7.22.4.4

Library

351

ISO/IEC 9899:201x

Committee Draft — April 12, 2011

N1570

4

Next, all open streams with unwritten buffered data are flushed, all open streams are
closed, and all files created by the tmpfile function are removed.

5

Finally, control is returned to the host environment. If the value of status is zero or
EXIT_SUCCESS, an implementation-defined form of the status successful termination is
returned. If the value of status is EXIT_FAILURE, an implementation-defined form
of the status unsuccessful termination is returned. Otherwise the status returned is
implementation-defined.
Returns

6

The exit function cannot return to its caller.



vim:tw=78:ts=8:ft=help:norl: